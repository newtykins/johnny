[package]
name = "johnny"
version = "0.1.0"
edition = "2021"
build = "build.rs"
publish = false

[workspace]
members = [".", "migration"]

[features]
default = ["tui"]

# general
tui = ["dep:ratatui", "dep:crossterm", "dep:ansi-to-tui"]
johnny = ["dep:imgurs", "dep:rand", "verbose", "sqlite", "pride"]
verbose = []

# database drivers
db = ["dep:sea-orm", "dep:migration", "dep:async-trait", "dep:rust-format", "dep:sea-orm-codegen"]

postgres = ["db", "sea-orm?/sqlx-postgres"]
mysql = ["db", "sea-orm?/sqlx-mysql"]
sqlite = ["db", "sea-orm?/sqlx-sqlite"]

# moderation
moderation = ["autorole"]

autorole = [] # requires: database driver

# image
image = ["pride"]

pride = ["dep:pride-overlay", "dep:reqwest", "dep:image", "dep:strum"]

# other
development = ["dep:dotenvy_macro"] # never enable this in production

[dependencies]
migration = { path = "migration", optional = true }
chrono = "0.4.26"
crossterm = { version = "0.26.1", optional = true }
dotenvy_macro = { version = "0.15.7", optional = true }
imgurs = { version = "0.11.2", optional = true }
owo-colors = { version = "3.5.0", features = ["supports-colors"] }
poise = "0.5.5"
rand = { version = "0.8.5", optional = true }
ratatui = { version = "0.21.0", optional = true }
sea-orm = { version = "0.11.3", optional = true, features = ["runtime-tokio-rustls", "macros"] }
serenity = { version = "0.11.5", default-features = false, features = ["client", "gateway", "rustls_backend", "model", "cache"] }
tokio = { version = "1.28.2", features = ["full"] }
pride-overlay = { version = "1.1.0", optional = true }
reqwest = { version = "0.11.18", optional = true }
image = { version = "0.24.6", optional = true }
strum = { version = "0.25.0", optional = true }
async-trait = { version = "0.1.71", optional = true }
ansi-to-tui = { version = "3.1.0", optional = true }
toml = "0.7.6"
serde = "1.0.171"
anyhow = "1.0.72"

[build-dependencies]
migration = { path = "migration", optional = true }
rust-format = { version = "0.3.4", optional = true }
sea-orm-codegen = { version = "0.11.3", optional = true }

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3

[package.metadata.cargo-all-features]

# we choose a database driver explicitly to prevent any forced compile errors
# if you want to use a different database driver, you can enable it here
always_include_features = ["sqlite"]
denylist = ["postgres", "mysql"]
